

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun May 05 22:15:22 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 6 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 6 "main.c"
    45  2007  E0D4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF & 0xE
                                 FFF & 0xFFFF ;#
    46                           # 7 "main.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 7 "main.c"
    49  2008  FFFF               	dw 0xFFFF & 0xFFFF ;#
    50                           	FNCALL	_main,_pause
    51                           	FNCALL	_pause,_msecbase
    52                           	FNROOT	_main
    53                           	global	_PORTB
    54                           psect	text82,local,class=CODE,delta=2
    55                           global __ptext82
    56  0000                     __ptext82:
    57  0006                     _PORTB	set	6
    58                           	global	_PORTC
    59  0007                     _PORTC	set	7
    60                           	global	_TMR0
    61  0001                     _TMR0	set	1
    62                           	global	_CARRY
    63  0018                     _CARRY	set	24
    64                           	global	_GIE
    65  005F                     _GIE	set	95
    66                           	global	_RA3
    67  002B                     _RA3	set	43
    68                           	global	_RC0
    69  0038                     _RC0	set	56
    70                           	global	_RC1
    71  0039                     _RC1	set	57
    72                           	global	_RC2
    73  003A                     _RC2	set	58
    74                           	global	_RC3
    75  003B                     _RC3	set	59
    76                           	global	_T0IF
    77  005A                     _T0IF	set	90
    78                           	global	_OPTION_REG
    79  0081                     _OPTION_REG	set	129
    80                           	global	_TRISA
    81  0085                     _TRISA	set	133
    82                           	global	_TRISB
    83  0086                     _TRISB	set	134
    84                           	global	_TRISC
    85  0087                     _TRISC	set	135
    86                           	global	_EEADR
    87  010D                     _EEADR	set	269
    88                           	global	_EEDATA
    89  010C                     _EEDATA	set	268
    90                           	global	_ANSEL
    91  0188                     _ANSEL	set	392
    92                           	global	_EECON1
    93  018C                     _EECON1	set	396
    94                           	global	_EECON2
    95  018D                     _EECON2	set	397
    96                           	global	_RD
    97  0C60                     _RD	set	3168
    98                           	global	_WR
    99  0C61                     _WR	set	3169
   100                           	global	_WREN
   101  0C62                     _WREN	set	3170
   102                           	file	"C:\Users\ACER\AppData\Local\Temp\s50a0."
   103                           	line	#
   104                           psect cinit,class=CODE,delta=2
   105                           global start_initialization
   106  0774                     start_initialization:
   107                           
   108                           psect cinit,class=CODE,delta=2
   109                           global end_of_initialization
   110                           
   111                           ;End of C runtime variable initialization code
   112                           
   113  0774                     end_of_initialization:
   114  0774  0183               clrf status
   115  0775  120A  118A  2FA2   ljmp _main	;jump to C main() function
   116                           psect	cstackCOMMON,class=COMMON,space=1
   117                           global __pcstackCOMMON
   118  0070                     __pcstackCOMMON:
   119                           	global	?_msecbase
   120  0070                     ?_msecbase:	; 0 bytes @ 0x0
   121                           	global	??_msecbase
   122  0070                     ??_msecbase:	; 0 bytes @ 0x0
   123                           	global	?_pause
   124  0070                     ?_pause:	; 0 bytes @ 0x0
   125                           	global	?_main
   126  0070                     ?_main:	; 0 bytes @ 0x0
   127                           	global	pause@msvalue
   128  0070                     pause@msvalue:	; 2 bytes @ 0x0
   129  0070                     	ds	2
   130                           	global	??_pause
   131  0072                     ??_pause:	; 0 bytes @ 0x2
   132                           	global	pause@x
   133  0072                     pause@x:	; 2 bytes @ 0x2
   134  0072                     	ds	2
   135                           	global	??_main
   136  0074                     ??_main:	; 0 bytes @ 0x4
   137  0074                     	ds	1
   138                           	global	main@state_led
   139  0075                     main@state_led:	; 1 bytes @ 0x5
   140  0075                     	ds	1
   141 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   142 ;;Auto spaces:   Size  Autos    Used
   143 ;; COMMON          14      6       6
   144 ;; BANK0           80      0       0
   145 ;; BANK1           80      0       0
   146 ;; BANK3           96      0       0
   147 ;; BANK2           96      0       0
   148                           
   149 ;;
   150 ;; Pointer list with targets:
   151                           
   152                           
   153                           
   154 ;;
   155 ;; Critical Paths under _main in COMMON
   156 ;;
   157 ;;   _main->_pause
   158 ;;
   159 ;; Critical Paths under _main in BANK0
   160 ;;
   161 ;;   None.
   162 ;;
   163 ;; Critical Paths under _main in BANK1
   164 ;;
   165 ;;   None.
   166 ;;
   167 ;; Critical Paths under _main in BANK3
   168 ;;
   169 ;;   None.
   170 ;;
   171 ;; Critical Paths under _main in BANK2
   172 ;;
   173 ;;   None.
   174                           
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   177 ;;
   178                           
   179 ;;
   180 ;;Call Graph Tables:
   181 ;;
   182 ;; ---------------------------------------------------------------------------------
   183 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   184 ;; ---------------------------------------------------------------------------------
   185 ;; (0) _main                                                 2     2      0      45
   186 ;;                                              4 COMMON     2     2      0
   187 ;;                              _pause
   188 ;; ---------------------------------------------------------------------------------
   189 ;; (1) _pause                                                4     2      2      30
   190 ;;                                              0 COMMON     4     2      2
   191 ;;                           _msecbase
   192 ;; ---------------------------------------------------------------------------------
   193 ;; (2) _msecbase                                             0     0      0       0
   194 ;; ---------------------------------------------------------------------------------
   195 ;; Estimated maximum stack depth 2
   196 ;; ---------------------------------------------------------------------------------
   197                           
   198 ;; Call Graph Graphs:
   199                           
   200 ;; _main (ROOT)
   201 ;;   _pause
   202 ;;     _msecbase
   203 ;;
   204                           
   205 ;; Address spaces:
   206                           
   207 ;;Name               Size   Autos  Total    Cost      Usage
   208 ;;BITCOMMON            E      0       0       0        0.0%
   209 ;;EEDATA             100      0       0       0        0.0%
   210 ;;NULL                 0      0       0       0        0.0%
   211 ;;CODE                 0      0       0       0        0.0%
   212 ;;COMMON               E      6       6       1       42.9%
   213 ;;BITSFR0              0      0       0       1        0.0%
   214 ;;SFR0                 0      0       0       1        0.0%
   215 ;;BITSFR1              0      0       0       2        0.0%
   216 ;;SFR1                 0      0       0       2        0.0%
   217 ;;STACK                0      0       2       2        0.0%
   218 ;;ABS                  0      0       0       3        0.0%
   219 ;;BITBANK0            50      0       0       4        0.0%
   220 ;;BITSFR3              0      0       0       4        0.0%
   221 ;;SFR3                 0      0       0       4        0.0%
   222 ;;BANK0               50      0       0       5        0.0%
   223 ;;BITSFR2              0      0       0       5        0.0%
   224 ;;SFR2                 0      0       0       5        0.0%
   225 ;;BITBANK1            50      0       0       6        0.0%
   226 ;;BANK1               50      0       0       7        0.0%
   227 ;;BITBANK3            60      0       0       8        0.0%
   228 ;;BANK3               60      0       0       9        0.0%
   229 ;;BITBANK2            60      0       0      10        0.0%
   230 ;;BANK2               60      0       0      11        0.0%
   231 ;;DATA                 0      0       0      12        0.0%
   232                           
   233                           	global	_main
   234                           psect	maintext,global,class=CODE,delta=2
   235                           global __pmaintext
   236  07A2                     __pmaintext:
   237                           
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 9 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  state_led       1    5[COMMON] unsigned char 
   245 ;; Return value:  Size  Location     Type
   246 ;;		None               void
   247 ;; Registers used:
   248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 17F/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         1       0       0       0       0
   256 ;;      Temps:          1       0       0       0       0
   257 ;;      Totals:         2       0       0       0       0
   258 ;;Total ram usage:        2 bytes
   259 ;; Hardware stack levels required when called:    2
   260 ;; This function calls:
   261 ;;		_pause
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           psect	maintext
   267                           	file	"main.c"
   268                           	line	9
   269                           	global	__size_of_main
   270  005E                     	__size_of_main	equ	__end_of_main-_main
   271                           	
   272  07A2                     _main:	
   273                           	opt	stack 6
   274                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   275                           	line	10
   276                           	
   277  07A2                     l4301:	
   278                           ;main.c: 10: unsigned char state_led = 0;
   279  07A2  01F5               	clrf	(main@state_led)
   280                           	line	11
   281                           	
   282  07A3                     l4303:	
   283                           ;main.c: 11: ANSEL = 0x00;
   284  07A3  1683               	bsf	status, 5	;RP0=1, select bank3
   285  07A4  1703               	bsf	status, 6	;RP1=1, select bank3
   286  07A5  0188               	clrf	(392)^0180h	;volatile
   287                           	line	12
   288                           ;main.c: 12: TRISC = 0x00;
   289  07A6  1683               	bsf	status, 5	;RP0=1, select bank1
   290  07A7  1303               	bcf	status, 6	;RP1=0, select bank1
   291  07A8  0187               	clrf	(135)^080h	;volatile
   292                           	line	13
   293                           ;main.c: 13: TRISB = 0x00;
   294  07A9  0186               	clrf	(134)^080h	;volatile
   295                           	line	14
   296                           	
   297  07AA                     l4305:	
   298                           ;main.c: 14: TRISA = 0xFF;
   299  07AA  30FF               	movlw	(0FFh)
   300  07AB  0085               	movwf	(133)^080h	;volatile
   301                           	line	15
   302                           	
   303  07AC                     l4307:	
   304                           ;main.c: 15: PORTC = 0x00;
   305  07AC  1283               	bcf	status, 5	;RP0=0, select bank0
   306  07AD  1303               	bcf	status, 6	;RP1=0, select bank0
   307  07AE  0187               	clrf	(7)	;volatile
   308                           	line	16
   309                           	
   310  07AF                     l4309:	
   311                           ;main.c: 16: PORTB = 0x00;
   312  07AF  0186               	clrf	(6)	;volatile
   313  07B0  2FB1               	goto	l4311
   314                           	line	18
   315                           ;main.c: 18: while(1){
   316                           	
   317  07B1                     l2063:	
   318                           	line	19
   319                           	
   320  07B1                     l4311:	
   321                           ;main.c: 19: if (RA3 == 0){
   322  07B1  1985               	btfsc	(43/8),(43)&7
   323  07B2  2FB4               	goto	u2241
   324  07B3  2FB5               	goto	u2240
   325  07B4                     u2241:
   326  07B4  2FB1               	goto	l4311
   327  07B5                     u2240:
   328                           	line	20
   329                           	
   330  07B5                     l4313:	
   331                           ;main.c: 20: state_led++;
   332  07B5  3001               	movlw	(01h)
   333  07B6  00F4               	movwf	(??_main+0)+0
   334  07B7  0874               	movf	(??_main+0)+0,w
   335  07B8  07F5               	addwf	(main@state_led),f
   336                           	line	21
   337                           ;main.c: 21: switch (state_led){
   338  07B9  2FD5               	goto	l4317
   339                           	line	22
   340                           ;main.c: 22: case 1:
   341                           	
   342  07BA                     l2066:	
   343                           	line	23
   344                           ;main.c: 23: RC0 = 1;
   345  07BA  1407               	bsf	(56/8),(56)&7
   346                           	line	24
   347                           ;main.c: 24: RC1 = 0;
   348  07BB  1087               	bcf	(57/8),(57)&7
   349                           	line	25
   350                           ;main.c: 25: RC2 = 0;
   351  07BC  1107               	bcf	(58/8),(58)&7
   352                           	line	26
   353                           ;main.c: 26: RC3 = 0;
   354  07BD  1187               	bcf	(59/8),(59)&7
   355                           	line	27
   356                           ;main.c: 27: break;
   357  07BE  2FE4               	goto	l2072
   358                           	line	28
   359                           ;main.c: 28: case 2:
   360                           	
   361  07BF                     l2068:	
   362                           	line	29
   363                           ;main.c: 29: RC0 = 0;
   364  07BF  1007               	bcf	(56/8),(56)&7
   365                           	line	30
   366                           ;main.c: 30: RC1 = 1;
   367  07C0  1487               	bsf	(57/8),(57)&7
   368                           	line	31
   369                           ;main.c: 31: RC2 = 0;
   370  07C1  1107               	bcf	(58/8),(58)&7
   371                           	line	32
   372                           ;main.c: 32: RC3 = 0;
   373  07C2  1187               	bcf	(59/8),(59)&7
   374                           	line	33
   375                           ;main.c: 33: break;
   376  07C3  2FE4               	goto	l2072
   377                           	line	34
   378                           ;main.c: 34: case 3:
   379                           	
   380  07C4                     l2069:	
   381                           	line	35
   382                           ;main.c: 35: RC0 = 0;
   383  07C4  1007               	bcf	(56/8),(56)&7
   384                           	line	36
   385                           ;main.c: 36: RC1 = 0;
   386  07C5  1087               	bcf	(57/8),(57)&7
   387                           	line	37
   388                           ;main.c: 37: RC2 = 1;
   389  07C6  1507               	bsf	(58/8),(58)&7
   390                           	line	38
   391                           ;main.c: 38: RC3 = 0;
   392  07C7  1187               	bcf	(59/8),(59)&7
   393                           	line	39
   394                           ;main.c: 39: break;
   395  07C8  2FE4               	goto	l2072
   396                           	line	40
   397                           ;main.c: 40: case 4:
   398                           	
   399  07C9                     l2070:	
   400                           	line	41
   401                           ;main.c: 41: RC0 = 0;
   402  07C9  1007               	bcf	(56/8),(56)&7
   403                           	line	42
   404                           ;main.c: 42: RC1 = 0;
   405  07CA  1087               	bcf	(57/8),(57)&7
   406                           	line	43
   407                           ;main.c: 43: RC2 = 0;
   408  07CB  1107               	bcf	(58/8),(58)&7
   409                           	line	44
   410                           ;main.c: 44: RC3 = 1;
   411  07CC  1587               	bsf	(59/8),(59)&7
   412                           	line	45
   413                           ;main.c: 45: break;
   414  07CD  2FE4               	goto	l2072
   415                           	line	46
   416                           ;main.c: 46: default:
   417                           	
   418  07CE                     l2071:	
   419                           	line	47
   420                           ;main.c: 47: state_led = 0;
   421  07CE  01F5               	clrf	(main@state_led)
   422                           	line	48
   423                           ;main.c: 48: RC0 = 0;
   424  07CF  1007               	bcf	(56/8),(56)&7
   425                           	line	49
   426                           ;main.c: 49: RC1 = 0;
   427  07D0  1087               	bcf	(57/8),(57)&7
   428                           	line	50
   429                           ;main.c: 50: RC2 = 0;
   430  07D1  1107               	bcf	(58/8),(58)&7
   431                           	line	51
   432                           ;main.c: 51: RC3 = 0;
   433  07D2  1187               	bcf	(59/8),(59)&7
   434                           	line	52
   435                           ;main.c: 52: break;
   436  07D3  2FE4               	goto	l2072
   437                           	line	53
   438                           	
   439  07D4                     l4315:	
   440                           ;main.c: 53: }
   441  07D4  2FE4               	goto	l2072
   442                           	line	21
   443                           	
   444  07D5                     l2065:	
   445                           	
   446  07D5                     l4317:	
   447  07D5  0875               	movf	(main@state_led),w
   448                           	; Switch size 1, requested type "space"
   449                           ; Number of cases is 4, Range of values is 1 to 4
   450                           ; switch strategies available:
   451                           ; Name         Instructions Cycles
   452                           ; simple_byte           13     7 (average)
   453                           ; direct_byte           23    11 (fixed)
   454                           ; jumptable            263     9 (fixed)
   455                           ;	Chosen strategy is simple_byte
   456                           
   457                           	opt asmopt_off
   458  07D6  3A01               	xorlw	1^0	; case 1
   459  07D7  1903               	skipnz
   460  07D8  2FBA               	goto	l2066
   461  07D9  3A03               	xorlw	2^1	; case 2
   462  07DA  1903               	skipnz
   463  07DB  2FBF               	goto	l2068
   464  07DC  3A01               	xorlw	3^2	; case 3
   465  07DD  1903               	skipnz
   466  07DE  2FC4               	goto	l2069
   467  07DF  3A07               	xorlw	4^3	; case 4
   468  07E0  1903               	skipnz
   469  07E1  2FC9               	goto	l2070
   470  07E2  2FCE               	goto	l2071
   471                           	opt asmopt_on
   472                           
   473                           	line	53
   474                           	
   475  07E3                     l2067:	
   476                           	line	54
   477                           ;main.c: 54: while (!RA3);
   478  07E3  2FE4               	goto	l2072
   479                           	
   480  07E4                     l2073:	
   481                           	
   482  07E4                     l2072:	
   483  07E4  1D85               	btfss	(43/8),(43)&7
   484  07E5  2FE7               	goto	u2251
   485  07E6  2FE8               	goto	u2250
   486  07E7                     u2251:
   487  07E7  2FE4               	goto	l2072
   488  07E8                     u2250:
   489  07E8  2FE9               	goto	l4319
   490                           	
   491  07E9                     l2074:	
   492                           	line	55
   493                           	
   494  07E9                     l4319:	
   495                           ;main.c: 55: pause (10);
   496  07E9  300A               	movlw	low(0Ah)
   497  07EA  00F0               	movwf	(?_pause)
   498  07EB  3000               	movlw	high(0Ah)
   499  07EC  00F1               	movwf	((?_pause))+1
   500  07ED  120A  118A  2787   	fcall	_pause
              120A  118A         
   501                           	line	56
   502                           ;main.c: 56: while (!RA3);
   503  07F2  2FF3               	goto	l2075
   504                           	
   505  07F3                     l2076:	
   506                           	
   507  07F3                     l2075:	
   508  07F3  1283               	bcf	status, 5	;RP0=0, select bank0
   509  07F4  1303               	bcf	status, 6	;RP1=0, select bank0
   510  07F5  1D85               	btfss	(43/8),(43)&7
   511  07F6  2FF8               	goto	u2261
   512  07F7  2FF9               	goto	u2260
   513  07F8                     u2261:
   514  07F8  2FF3               	goto	l2075
   515  07F9                     u2260:
   516  07F9  2FB1               	goto	l4311
   517                           	
   518  07FA                     l2077:	
   519  07FA  2FB1               	goto	l4311
   520                           	line	57
   521                           	
   522  07FB                     l2064:	
   523  07FB  2FB1               	goto	l4311
   524                           	line	58
   525                           	
   526  07FC                     l2078:	
   527                           	line	18
   528  07FC  2FB1               	goto	l4311
   529                           	
   530  07FD                     l2079:	
   531                           	line	59
   532                           	
   533  07FD                     l2080:	
   534                           	global	start
   535  07FD  120A  118A  2800   	ljmp	start
   536                           	opt stack 0
   537                           GLOBAL	__end_of_main
   538  0800                     	__end_of_main:
   539 ;; =============== function _main ends ============
   540                           
   541                           	signat	_main,88
   542                           	global	_pause
   543                           psect	text83,local,class=CODE,delta=2
   544                           global __ptext83
   545  0787                     __ptext83:
   546                           
   547 ;; *************** function _pause *****************
   548 ;; Defined at:
   549 ;;		line 3 in file "pause.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  msvalue         2    0[COMMON] unsigned short 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  x               2    2[COMMON] unsigned short 
   554 ;; Return value:  Size  Location     Type
   555 ;;		None               void
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         2       0       0       0       0
   564 ;;      Locals:         2       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         4       0       0       0       0
   567 ;;Total ram usage:        4 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    1
   570 ;; This function calls:
   571 ;;		_msecbase
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           psect	text83
   577                           	file	"pause.c"
   578                           	line	3
   579                           	global	__size_of_pause
   580  001B                     	__size_of_pause	equ	__end_of_pause-_pause
   581                           	
   582  0787                     _pause:	
   583                           	opt	stack 6
   584                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   585                           	line	4
   586                           	
   587  0787                     l4293:	
   588                           ;pause.c: 4: for (unsigned short x=0; x<=msvalue; x++) msecbase();
   589  0787  01F2               	clrf	(pause@x)
   590  0788  01F3               	clrf	(pause@x+1)
   591  0789  2F96               	goto	l4299
   592                           	
   593  078A                     l1034:	
   594                           	
   595  078A                     l4295:	
   596  078A  120A  118A  2778   	fcall	_msecbase
              120A  118A         
   597                           	
   598  078F                     l4297:	
   599  078F  3001               	movlw	low(01h)
   600  0790  07F2               	addwf	(pause@x),f
   601  0791  1803               	skipnc
   602  0792  0AF3               	incf	(pause@x+1),f
   603  0793  3000               	movlw	high(01h)
   604  0794  07F3               	addwf	(pause@x+1),f
   605  0795  2F96               	goto	l4299
   606                           	
   607  0796                     l1033:	
   608                           	
   609  0796                     l4299:	
   610  0796  0873               	movf	(pause@x+1),w
   611  0797  0271               	subwf	(pause@msvalue+1),w
   612  0798  1D03               	skipz
   613  0799  2F9C               	goto	u2235
   614  079A  0872               	movf	(pause@x),w
   615  079B  0270               	subwf	(pause@msvalue),w
   616  079C                     u2235:
   617  079C  1803               	skipnc
   618  079D  2F9F               	goto	u2231
   619  079E  2FA0               	goto	u2230
   620  079F                     u2231:
   621  079F  2F8A               	goto	l4295
   622  07A0                     u2230:
   623  07A0  2FA1               	goto	l1036
   624                           	
   625  07A1                     l1035:	
   626                           	line	5
   627                           	
   628  07A1                     l1036:	
   629  07A1  0008               	return
   630                           	opt stack 0
   631                           GLOBAL	__end_of_pause
   632  07A2                     	__end_of_pause:
   633 ;; =============== function _pause ends ============
   634                           
   635                           	signat	_pause,4216
   636                           	global	_msecbase
   637                           psect	text84,local,class=CODE,delta=2
   638                           global __ptext84
   639  0778                     __ptext84:
   640                           
   641 ;; *************** function _msecbase *****************
   642 ;; Defined at:
   643 ;;		line 3 in file "msecbase.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;		None               void
   650 ;; Registers used:
   651 ;;		wreg
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_pause
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           psect	text84
   670                           	file	"msecbase.c"
   671                           	line	3
   672                           	global	__size_of_msecbase
   673  000F                     	__size_of_msecbase	equ	__end_of_msecbase-_msecbase
   674                           	
   675  0778                     _msecbase:	
   676                           	opt	stack 6
   677                           ; Regs used in _msecbase: [wreg]
   678                           	line	4
   679                           	
   680  0778                     l3433:	
   681                           ;msecbase.c: 4: OPTION_REG= 0b00000001;
   682  0778  3001               	movlw	(01h)
   683  0779  1683               	bsf	status, 5	;RP0=1, select bank1
   684  077A  1303               	bcf	status, 6	;RP1=0, select bank1
   685  077B  0081               	movwf	(129)^080h	;volatile
   686                           	line	5
   687                           ;msecbase.c: 5: TMR0 = 0x0D;
   688  077C  300D               	movlw	(0Dh)
   689  077D  1283               	bcf	status, 5	;RP0=0, select bank0
   690  077E  1303               	bcf	status, 6	;RP1=0, select bank0
   691  077F  0081               	movwf	(1)	;volatile
   692                           	line	6
   693                           ;msecbase.c: 6: while(!T0IF);
   694  0780  2F81               	goto	l1025
   695                           	
   696  0781                     l1026:	
   697                           	
   698  0781                     l1025:	
   699  0781  1D0B               	btfss	(90/8),(90)&7
   700  0782  2F84               	goto	u11
   701  0783  2F85               	goto	u10
   702  0784                     u11:
   703  0784  2F81               	goto	l1025
   704  0785                     u10:
   705                           	
   706  0785                     l1027:	
   707                           	line	7
   708                           ;msecbase.c: 7: T0IF = 0;
   709  0785  110B               	bcf	(90/8),(90)&7
   710                           	line	8
   711                           	
   712  0786                     l1028:	
   713  0786  0008               	return
   714                           	opt stack 0
   715                           GLOBAL	__end_of_msecbase
   716  0787                     	__end_of_msecbase:
   717 ;; =============== function _msecbase ends ============
   718                           
   719                           	signat	_msecbase,88
   720                           psect	text85,local,class=CODE,delta=2
   721                           global __ptext85
   722  0000                     __ptext85:
   723                           	global	btemp
   724  007E                     	btemp set 07Eh
   725                           
   726                           	DABS	1,126,2	;btemp
   727                           	global	wtemp0
   728  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun May 05 22:15:22 2019

                  _RD 0C60                    u10 0785                    u11 0784                    _WR 0C61  
                 _GIE 005F                   _RA3 002B                   _RC0 0038                   _RC1 0039  
                 _RC2 003A                   _RC3 003B                  l1025 0781                  l1033 0796  
                l1026 0781                  l1034 078A                  l1027 0785                  l1035 07A1  
                l1028 0786                  l1036 07A1                  l2070 07C9                  l2071 07CE  
                l2063 07B1                  l2080 07FD                  l2064 07FB                  l2072 07E4  
                l2073 07E4                  l2065 07D5                  l2074 07E9                  l2066 07BA  
                l2075 07F3                  l2067 07E3                  l2076 07F3                  l2068 07BF  
                l2077 07FA                  l2069 07C4                  l2078 07FC                  l2079 07FD  
                l4301 07A2                  l4311 07B1                  l4303 07A3                  l3433 0778  
                l4313 07B5                  l4305 07AA                  l4315 07D4                  l4307 07AC  
                l4317 07D5                  l4309 07AF                  l4319 07E9                  l4293 0787  
                l4295 078A                  l4297 078F                  l4299 0796                  _T0IF 005A  
                u2230 07A0                  u2231 079F                  u2240 07B5                  u2241 07B4  
                u2250 07E8                  u2235 079C                  u2251 07E7                  u2260 07F9  
                u2261 07F8                  _TMR0 0001                  _WREN 0C62                  _main 07A2  
                btemp 007E                  start 0000                 ?_main 0070                 _EEADR 010D  
               _CARRY 0018                 _ANSEL 0188                 _PORTB 0006                 _PORTC 0007  
               _TRISA 0085                 _TRISB 0086                 _TRISC 0087                 _pause 0787  
               status 0003                 wtemp0 007E          __end_of_main 0800                ??_main 0074  
              _EEDATA 010C                ?_pause 0070                _EECON1 018C                _EECON2 018D  
    __end_of_msecbase 0787                pause@x 0072         main@state_led 0075        __pcstackCOMMON 0070  
       __end_of_pause 07A2               ??_pause 0072            __pmaintext 07A2             ?_msecbase 0070  
end_of_initialization 0774            ??_msecbase 0070   start_initialization 0774          pause@msvalue 0070  
   __size_of_msecbase 000F        __size_of_pause 001B              __ptext82 0000              __ptext83 0787  
            __ptext84 0778              __ptext85 0000         __size_of_main 005E              _msecbase 0778  
          _OPTION_REG 0081  
