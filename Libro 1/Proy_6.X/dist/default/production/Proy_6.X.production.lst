

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun May 05 21:55:40 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 3 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 3 "main.c"
    45  2007  E0D4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF & 0xE
                                 FFF & 0xFFFF ;#
    46                           # 4 "main.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 4 "main.c"
    49  2008  FFFF               	dw 0xFFFF & 0xFFFF ;#
    50                           	FNCALL	_main,_pause
    51                           	FNCALL	_pause,_msecbase
    52                           	FNROOT	_main
    53                           	global	_delay
    54                           psect	idataCOMMON,class=CODE,space=0,delta=2
    55                           global __pidataCOMMON
    56  0797                     __pidataCOMMON:
    57                           	file	"main.c"
    58                           	line	6
    59                           
    60                           ;initializer for _delay
    61  0797  34F4               	retlw	0F4h
    62  0798  3401               	retlw	01h
    63                           
    64                           	global	_PORTB
    65  0006                     _PORTB	set	6
    66                           	global	_PORTC
    67  0007                     _PORTC	set	7
    68                           	global	_TMR0
    69  0001                     _TMR0	set	1
    70                           	global	_CARRY
    71  0018                     _CARRY	set	24
    72                           	global	_GIE
    73  005F                     _GIE	set	95
    74                           	global	_RC0
    75  0038                     _RC0	set	56
    76                           	global	_T0IF
    77  005A                     _T0IF	set	90
    78                           	global	_OPTION_REG
    79  0081                     _OPTION_REG	set	129
    80                           	global	_TRISB
    81  0086                     _TRISB	set	134
    82                           	global	_TRISC
    83  0087                     _TRISC	set	135
    84                           	global	_EEADR
    85  010D                     _EEADR	set	269
    86                           	global	_EEDATA
    87  010C                     _EEDATA	set	268
    88                           	global	_ANSEL
    89  0188                     _ANSEL	set	392
    90                           	global	_EECON1
    91  018C                     _EECON1	set	396
    92                           	global	_EECON2
    93  018D                     _EECON2	set	397
    94                           	global	_RD
    95  0C60                     _RD	set	3168
    96                           	global	_WR
    97  0C61                     _WR	set	3169
    98                           	global	_WREN
    99  0C62                     _WREN	set	3170
   100                           	file	"C:\Users\ACER\AppData\Local\Temp\s4rt4."
   101                           	line	#
   102                           psect cinit,class=CODE,delta=2
   103                           global start_initialization
   104  07A8                     start_initialization:
   105                           
   106                           psect	dataCOMMON,class=COMMON,space=1
   107                           global __pdataCOMMON
   108  0074                     __pdataCOMMON:
   109                           	file	"main.c"
   110  0074                     _delay:
   111  0074                            ds      2
   112                           
   113                           ; Initialize objects allocated to COMMON
   114                           	global __pidataCOMMON
   115                           psect cinit,class=CODE,delta=2
   116  07A8  120A  118A  2797   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  118A         
   117  07AD  00F4               	movwf	__pdataCOMMON+0&07fh		
   118  07AE  120A  118A  2798   	fcall	__pidataCOMMON+1		;fetch initializer
              120A  118A         
   119  07B3  00F5               	movwf	__pdataCOMMON+1&07fh		
   120                           psect cinit,class=CODE,delta=2
   121                           global end_of_initialization
   122                           
   123                           ;End of C runtime variable initialization code
   124                           
   125  07B4                     end_of_initialization:
   126  07B4  0183               clrf status
   127  07B5  120A  118A  2FD3   ljmp _main	;jump to C main() function
   128                           psect	cstackCOMMON,class=COMMON,space=1
   129                           global __pcstackCOMMON
   130  0070                     __pcstackCOMMON:
   131                           	global	?_msecbase
   132  0070                     ?_msecbase:	; 0 bytes @ 0x0
   133                           	global	??_msecbase
   134  0070                     ??_msecbase:	; 0 bytes @ 0x0
   135                           	global	?_pause
   136  0070                     ?_pause:	; 0 bytes @ 0x0
   137                           	global	?_main
   138  0070                     ?_main:	; 0 bytes @ 0x0
   139                           	global	pause@msvalue
   140  0070                     pause@msvalue:	; 2 bytes @ 0x0
   141  0070                     	ds	2
   142                           	global	??_pause
   143  0072                     ??_pause:	; 0 bytes @ 0x2
   144                           	global	pause@x
   145  0072                     pause@x:	; 2 bytes @ 0x2
   146  0072                     	ds	2
   147                           	global	??_main
   148  0074                     ??_main:	; 0 bytes @ 0x4
   149 ;;Data sizes: Strings 0, constant 0, data 2, bss 0, persistent 0 stack 0
   150 ;;Auto spaces:   Size  Autos    Used
   151 ;; COMMON          14      4       6
   152 ;; BANK0           80      0       0
   153 ;; BANK1           80      0       0
   154 ;; BANK3           96      0       0
   155 ;; BANK2           96      0       0
   156                           
   157 ;;
   158 ;; Pointer list with targets:
   159                           
   160                           
   161                           
   162 ;;
   163 ;; Critical Paths under _main in COMMON
   164 ;;
   165 ;;   _main->_pause
   166 ;;
   167 ;; Critical Paths under _main in BANK0
   168 ;;
   169 ;;   None.
   170 ;;
   171 ;; Critical Paths under _main in BANK1
   172 ;;
   173 ;;   None.
   174 ;;
   175 ;; Critical Paths under _main in BANK3
   176 ;;
   177 ;;   None.
   178 ;;
   179 ;; Critical Paths under _main in BANK2
   180 ;;
   181 ;;   None.
   182                           
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   185 ;;
   186                           
   187 ;;
   188 ;;Call Graph Tables:
   189 ;;
   190 ;; ---------------------------------------------------------------------------------
   191 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   192 ;; ---------------------------------------------------------------------------------
   193 ;; (0) _main                                                 0     0      0      30
   194 ;;                              _pause
   195 ;; ---------------------------------------------------------------------------------
   196 ;; (1) _pause                                                4     2      2      30
   197 ;;                                              0 COMMON     4     2      2
   198 ;;                           _msecbase
   199 ;; ---------------------------------------------------------------------------------
   200 ;; (2) _msecbase                                             0     0      0       0
   201 ;; ---------------------------------------------------------------------------------
   202 ;; Estimated maximum stack depth 2
   203 ;; ---------------------------------------------------------------------------------
   204                           
   205 ;; Call Graph Graphs:
   206                           
   207 ;; _main (ROOT)
   208 ;;   _pause
   209 ;;     _msecbase
   210 ;;
   211                           
   212 ;; Address spaces:
   213                           
   214 ;;Name               Size   Autos  Total    Cost      Usage
   215 ;;BANK3               60      0       0       9        0.0%
   216 ;;BITBANK3            60      0       0       8        0.0%
   217 ;;SFR3                 0      0       0       4        0.0%
   218 ;;BITSFR3              0      0       0       4        0.0%
   219 ;;BANK2               60      0       0      11        0.0%
   220 ;;BITBANK2            60      0       0      10        0.0%
   221 ;;SFR2                 0      0       0       5        0.0%
   222 ;;BITSFR2              0      0       0       5        0.0%
   223 ;;SFR1                 0      0       0       2        0.0%
   224 ;;BITSFR1              0      0       0       2        0.0%
   225 ;;BANK1               50      0       0       7        0.0%
   226 ;;BITBANK1            50      0       0       6        0.0%
   227 ;;CODE                 0      0       0       0        0.0%
   228 ;;DATA                 0      0       8      12        0.0%
   229 ;;ABS                  0      0       6       3        0.0%
   230 ;;NULL                 0      0       0       0        0.0%
   231 ;;STACK                0      0       2       2        0.0%
   232 ;;BANK0               50      0       0       5        0.0%
   233 ;;BITBANK0            50      0       0       4        0.0%
   234 ;;SFR0                 0      0       0       1        0.0%
   235 ;;BITSFR0              0      0       0       1        0.0%
   236 ;;COMMON               E      4       6       1       42.9%
   237 ;;BITCOMMON            E      0       0       0        0.0%
   238 ;;EEDATA             100      0       0       0        0.0%
   239                           
   240                           	global	_main
   241                           psect	maintext,global,class=CODE,delta=2
   242                           global __pmaintext
   243  07D3                     __pmaintext:
   244                           
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 9 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;		None               void
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, pclath, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 17F/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   261 ;;      Params:         0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0
   264 ;;      Totals:         0       0       0       0       0
   265 ;;Total ram usage:        0 bytes
   266 ;; Hardware stack levels required when called:    2
   267 ;; This function calls:
   268 ;;		_pause
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           psect	maintext
   274                           	file	"main.c"
   275                           	line	9
   276                           	global	__size_of_main
   277  002D                     	__size_of_main	equ	__end_of_main-_main
   278                           	
   279  07D3                     _main:	
   280                           	opt	stack 6
   281                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   282                           	line	10
   283                           	
   284  07D3                     l5311:	
   285                           ;main.c: 10: ANSEL = 0x00;
   286  07D3  1683               	bsf	status, 5	;RP0=1, select bank3
   287  07D4  1703               	bsf	status, 6	;RP1=1, select bank3
   288  07D5  0188               	clrf	(392)^0180h	;volatile
   289                           	line	11
   290                           ;main.c: 11: TRISC = 0x00;
   291  07D6  1683               	bsf	status, 5	;RP0=1, select bank1
   292  07D7  1303               	bcf	status, 6	;RP1=0, select bank1
   293  07D8  0187               	clrf	(135)^080h	;volatile
   294                           	line	12
   295                           ;main.c: 12: TRISB = 0x00;
   296  07D9  0186               	clrf	(134)^080h	;volatile
   297                           	line	13
   298                           ;main.c: 13: PORTC = 0x00;
   299  07DA  1283               	bcf	status, 5	;RP0=0, select bank0
   300  07DB  1303               	bcf	status, 6	;RP1=0, select bank0
   301  07DC  0187               	clrf	(7)	;volatile
   302                           	line	14
   303                           ;main.c: 14: PORTB = 0x00;
   304  07DD  0186               	clrf	(6)	;volatile
   305  07DE  2FDF               	goto	l5313
   306                           	line	16
   307                           ;main.c: 16: while(1){
   308                           	
   309  07DF                     l3087:	
   310                           	line	17
   311                           	
   312  07DF                     l5313:	
   313                           ;main.c: 17: RC0 = 1;
   314  07DF  1283               	bcf	status, 5	;RP0=0, select bank0
   315  07E0  1303               	bcf	status, 6	;RP1=0, select bank0
   316  07E1  1407               	bsf	(56/8),(56)&7
   317                           	line	18
   318                           	
   319  07E2                     l5315:	
   320                           ;main.c: 18: pause(delay);
   321  07E2  0875               	movf	(_delay+1),w
   322  07E3  01F1               	clrf	(?_pause+1)
   323  07E4  07F1               	addwf	(?_pause+1)
   324  07E5  0874               	movf	(_delay),w
   325  07E6  01F0               	clrf	(?_pause)
   326  07E7  07F0               	addwf	(?_pause)
   327                           
   328  07E8  120A  118A  27B8   	fcall	_pause
              120A  118A         
   329                           	line	19
   330                           	
   331  07ED                     l5317:	
   332                           ;main.c: 19: RC0 = 0;
   333  07ED  1283               	bcf	status, 5	;RP0=0, select bank0
   334  07EE  1303               	bcf	status, 6	;RP1=0, select bank0
   335  07EF  1007               	bcf	(56/8),(56)&7
   336                           	line	20
   337                           	
   338  07F0                     l5319:	
   339                           ;main.c: 20: pause(delay);
   340  07F0  0875               	movf	(_delay+1),w
   341  07F1  01F1               	clrf	(?_pause+1)
   342  07F2  07F1               	addwf	(?_pause+1)
   343  07F3  0874               	movf	(_delay),w
   344  07F4  01F0               	clrf	(?_pause)
   345  07F5  07F0               	addwf	(?_pause)
   346                           
   347  07F6  120A  118A  27B8   	fcall	_pause
              120A  118A         
   348  07FB  2FDF               	goto	l5313
   349                           	line	21
   350                           	
   351  07FC                     l3088:	
   352                           	line	16
   353  07FC  2FDF               	goto	l5313
   354                           	
   355  07FD                     l3089:	
   356                           	line	22
   357                           	
   358  07FD                     l3090:	
   359                           	global	start
   360  07FD  120A  118A  2800   	ljmp	start
   361                           	opt stack 0
   362                           GLOBAL	__end_of_main
   363  0800                     	__end_of_main:
   364 ;; =============== function _main ends ============
   365                           
   366                           	signat	_main,88
   367                           	global	_pause
   368                           psect	text83,local,class=CODE,delta=2
   369                           global __ptext83
   370  07B8                     __ptext83:
   371                           
   372 ;; *************** function _pause *****************
   373 ;; Defined at:
   374 ;;		line 4 in file "pause.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;  msvalue         2    0[COMMON] unsigned short 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  x               2    2[COMMON] unsigned short 
   379 ;; Return value:  Size  Location     Type
   380 ;;		None               void
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         2       0       0       0       0
   389 ;;      Locals:         2       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         4       0       0       0       0
   392 ;;Total ram usage:        4 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; Hardware stack levels required when called:    1
   395 ;; This function calls:
   396 ;;		_msecbase
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           psect	text83
   402                           	file	"pause.c"
   403                           	line	4
   404                           	global	__size_of_pause
   405  001B                     	__size_of_pause	equ	__end_of_pause-_pause
   406                           	
   407  07B8                     _pause:	
   408                           	opt	stack 6
   409                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   410                           	line	5
   411                           	
   412  07B8                     l5303:	
   413                           ;pause.c: 5: for (unsigned short x=0; x<=msvalue; x++) msecbase();
   414  07B8  01F2               	clrf	(pause@x)
   415  07B9  01F3               	clrf	(pause@x+1)
   416  07BA  2FC7               	goto	l5309
   417                           	
   418  07BB                     l2056:	
   419                           	
   420  07BB                     l5305:	
   421  07BB  120A  118A  2799   	fcall	_msecbase
              120A  118A         
   422                           	
   423  07C0                     l5307:	
   424  07C0  3001               	movlw	low(01h)
   425  07C1  07F2               	addwf	(pause@x),f
   426  07C2  1803               	skipnc
   427  07C3  0AF3               	incf	(pause@x+1),f
   428  07C4  3000               	movlw	high(01h)
   429  07C5  07F3               	addwf	(pause@x+1),f
   430  07C6  2FC7               	goto	l5309
   431                           	
   432  07C7                     l2055:	
   433                           	
   434  07C7                     l5309:	
   435  07C7  0873               	movf	(pause@x+1),w
   436  07C8  0271               	subwf	(pause@msvalue+1),w
   437  07C9  1D03               	skipz
   438  07CA  2FCD               	goto	u2235
   439  07CB  0872               	movf	(pause@x),w
   440  07CC  0270               	subwf	(pause@msvalue),w
   441  07CD                     u2235:
   442  07CD  1803               	skipnc
   443  07CE  2FD0               	goto	u2231
   444  07CF  2FD1               	goto	u2230
   445  07D0                     u2231:
   446  07D0  2FBB               	goto	l5305
   447  07D1                     u2230:
   448  07D1  2FD2               	goto	l2058
   449                           	
   450  07D2                     l2057:	
   451                           	line	6
   452                           	
   453  07D2                     l2058:	
   454  07D2  0008               	return
   455                           	opt stack 0
   456                           GLOBAL	__end_of_pause
   457  07D3                     	__end_of_pause:
   458 ;; =============== function _pause ends ============
   459                           
   460                           	signat	_pause,4216
   461                           	global	_msecbase
   462                           psect	text84,local,class=CODE,delta=2
   463                           global __ptext84
   464  0799                     __ptext84:
   465                           
   466 ;; *************** function _msecbase *****************
   467 ;; Defined at:
   468 ;;		line 3 in file "msecbase.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;		None               void
   475 ;; Registers used:
   476 ;;		wreg
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_pause
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           psect	text84
   495                           	file	"msecbase.c"
   496                           	line	3
   497                           	global	__size_of_msecbase
   498  000F                     	__size_of_msecbase	equ	__end_of_msecbase-_msecbase
   499                           	
   500  0799                     _msecbase:	
   501                           	opt	stack 6
   502                           ; Regs used in _msecbase: [wreg]
   503                           	line	4
   504                           	
   505  0799                     l4443:	
   506                           ;msecbase.c: 4: OPTION_REG= 0b00000001;
   507  0799  3001               	movlw	(01h)
   508  079A  1683               	bsf	status, 5	;RP0=1, select bank1
   509  079B  1303               	bcf	status, 6	;RP1=0, select bank1
   510  079C  0081               	movwf	(129)^080h	;volatile
   511                           	line	5
   512                           ;msecbase.c: 5: TMR0 = 0x0D;
   513  079D  300D               	movlw	(0Dh)
   514  079E  1283               	bcf	status, 5	;RP0=0, select bank0
   515  079F  1303               	bcf	status, 6	;RP1=0, select bank0
   516  07A0  0081               	movwf	(1)	;volatile
   517                           	line	6
   518                           ;msecbase.c: 6: while(!T0IF);
   519  07A1  2FA2               	goto	l1025
   520                           	
   521  07A2                     l1026:	
   522                           	
   523  07A2                     l1025:	
   524  07A2  1D0B               	btfss	(90/8),(90)&7
   525  07A3  2FA5               	goto	u11
   526  07A4  2FA6               	goto	u10
   527  07A5                     u11:
   528  07A5  2FA2               	goto	l1025
   529  07A6                     u10:
   530                           	
   531  07A6                     l1027:	
   532                           	line	7
   533                           ;msecbase.c: 7: T0IF = 0;
   534  07A6  110B               	bcf	(90/8),(90)&7
   535                           	line	8
   536                           	
   537  07A7                     l1028:	
   538  07A7  0008               	return
   539                           	opt stack 0
   540                           GLOBAL	__end_of_msecbase
   541  07A8                     	__end_of_msecbase:
   542 ;; =============== function _msecbase ends ============
   543                           
   544                           	signat	_msecbase,88
   545                           psect	text85,local,class=CODE,delta=2
   546                           global __ptext85
   547  0000                     __ptext85:
   548                           	global	btemp
   549  007E                     	btemp set 07Eh
   550                           
   551                           	DABS	1,126,2	;btemp
   552                           	global	wtemp0
   553  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun May 05 21:55:40 2019

                  _RD 0C60                    u10 07A6                    u11 07A5                    _WR 0C61  
                 _GIE 005F                   _RC0 0038                  l1025 07A2                  l1026 07A2  
                l1027 07A6                  l1028 07A7                  l2055 07C7                  l2056 07BB  
                l2057 07D2                  l2058 07D2                  l3090 07FD                  l3087 07DF  
                l3088 07FC                  l3089 07FD                  l5303 07B8                  l5311 07D3  
                l5305 07BB                  l5313 07DF                  l4443 0799                  l5307 07C0  
                l5315 07E2                  l5309 07C7                  l5317 07ED                  l5319 07F0  
                _T0IF 005A                  u2230 07D1                  u2231 07D0                  u2235 07CD  
                _TMR0 0001                  _WREN 0C62                  _main 07D3                  btemp 007E  
                start 0000                 ?_main 0070                 _EEADR 010D                 _CARRY 0018  
               _ANSEL 0188                 _PORTB 0006                 _PORTC 0007                 _TRISB 0086  
               _TRISC 0087                 _delay 0074                 _pause 07B8                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0074                _EEDATA 010C  
              ?_pause 0070                _EECON1 018C                _EECON2 018D      __end_of_msecbase 07A8  
        __pdataCOMMON 0074                pause@x 0072        __pcstackCOMMON 0070         __end_of_pause 07D3  
             ??_pause 0072            __pmaintext 07D3             ?_msecbase 0070  end_of_initialization 07B4  
          ??_msecbase 0070         __pidataCOMMON 0797   start_initialization 07A8          pause@msvalue 0070  
   __size_of_msecbase 000F        __size_of_pause 001B              __ptext83 07B8              __ptext84 0799  
            __ptext85 0000         __size_of_main 002D              _msecbase 0799            _OPTION_REG 0081  
